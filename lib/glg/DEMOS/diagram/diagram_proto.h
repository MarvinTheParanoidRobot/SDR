/* Function prototypes */
int main( int argc, char *argv[] );
void MainIH( GlgIH ih, GlgCallEvent call_event );
void SelectObjectWithMouse( GlgObject cursor_pos_obj );
void MoveObjectIH( GlgIH ih, GlgCallEvent call_event );
void AddNodeIH( GlgIH ih, GlgCallEvent call_event );
void AddLinkIH( GlgIH ih, GlgCallEvent call_event );
void StoreAttachmentPoints( GlgObject cursor_pos_obj, GlgIHToken event_type );
void EditPropertiesIH( GlgIH ih, GlgCallEvent call_event );
void DisplayUsage( void );
void Initialize( GlgObject viewport );
void SetCreateMode( GlgBoolean );
void TraceCB( GlgObject viewport, GlgAnyType client_data, GlgAnyType call_data );
void ShowAttachmentPoints( GlgObject point, GlgObject pt_array, GlgObject sel_node, GlgLong highlight_type );
void EraseAttachmentPoints( void );
void FinalizeLink( GlgObject link );
void StorePointData( GlgLinkData link_data, GlgObject link );
void RestorePointData( GlgLinkData link_data, GlgObject link );
void GetPointFromObj( GlgObject point_obj, GlgPoint *point );
void MoveObject( GlgObject object, GlgObject start_point_obj, GlgObject end_point_obj );
void MoveLink( GlgObject link, GlgObject start_point_obj, GlgObject end_point_obj );
void UpdateNodePosition( GlgObject node, GlgNodeData node_data );
GlgObject GetObjectsAtCursor( GlgObject cursor_pos_obj );
void InputCB( GlgObject viewport, GlgAnyType client_data, GlgAnyType call_data );
void SelectGlgObject( GlgObject object, ObjectType selected_type );
void Cut( void );
void Paste( void );
void Save( GlgDiagramData diagram );
void PrintLinkInfo( char *label, GlgObject node_list, GlgNodeData node, char *point_name );
void Load( void );
void Print( void );
GlgLong FinishLink( GlgObject link );
void SetPrompt( char *string );
void SetError( char *string );
void SetObject( GlgObject *object_ptr, GlgObject object );
void SetString( char **string_ptr, char *string );
GlgLong NoSelection( void );
GlgObject AddNodeAt( GlgLong node_type, GlgNodeData node_data, GlgObject position_obj, GlgCoordType coord_type );
GlgObject CreateNode( GlgNodeData node_data );
GlgObject CreateLink( GlgLinkData link_data );
void ConstrainLinkPoint( GlgObject link, GlgObject point, GlgBoolean last_point );
void SetArcMiddlePoint( GlgObject link );
void AttachFramePoints( GlgObject link );
GlgObject UnConstrainLinkPoint( GlgObject link, GlgBoolean last_point );
void DetachFramePoints( GlgObject link );
void SetLastPoint( GlgObject link, GlgObject cursor_pos_obj, GlgBoolean offset, GlgBoolean arc_middle_point );
void AddLinkPoints( GlgObject link, GlgLong num_points );
void SetEdgeDirection( GlgObject link, GlgObject start_pos_obj, GlgObject end_pos_obj );
GlgObject AddLinkObject( GlgLong link_type, GlgLinkData link_data );
void PlaceObject( GlgObject node, GlgPoint *pos, GlgLong coord_type, GlgPoint *world_coord );
GlgObject GetCPContainer( GlgObject link, GlgLong *edge_type );
GlgObject GetSelectedObject( GlgObject object, ObjectType *selection_type );
GlgObject GetNodeAttachmentPoints( GlgObject sel_object, char *name_prefix );
GlgObject GetSelectedPoint( GlgObject point_array, GlgObject cursor_pos_obj );
void SetDiagram( GlgDiagramData diagram );
void UnsetDiagram( GlgDiagramData diagram, GlgLong destroy_data );
void FillObjectPalette( char *palette_name, char *button_name, GlgLong start_index );
GlgLong FillObjectPaletteFromArray( GlgObject palette, char *button_name, GlgLong start_index, GlgObject icon_array, GlgObject object_array, char *default_tooltip );
void SetupObjectPalette( char *button_name, GlgLong start_index );
double GetIconZoomFactor( GlgObject button, GlgObject icon );
void GetPaletteIcons( GlgObject palette, char *icon_name, GlgObject icon_array, GlgObject object_array );
void AddCustomData( GlgObject object, void *data );
void *GetData( GlgObject object );
void SetRadioBox( char *button_name );
void GetPosition( GlgObject object, GlgPoint *coord );
void FillData( void );
GlgLong ApplyDialogData( void );
char *GetObjectLabel( GlgObject object, ObjectType type );
void SetObjectLabel( GlgObject object, ObjectType type, char *label );
char *GetObjectData( GlgObject object, ObjectType type );
void SetObjectData( GlgObject object, ObjectType type, char *object_data );
char *GetObjectDataSource( GlgObject object, ObjectType type );
void SetObjectDataSource( GlgObject object, ObjectType type, char *datasource );
GlgDiagramData CreateDiagramData( void );
void DestroyDiagramData( GlgDiagramData data );
GlgNodeData CreateNodeData( void );
GlgLinkData CreateLinkData( void );
void DestroyNodeData( GlgNodeData data );
void DestroyLinkData( GlgLinkData data );
GlgLong NodeConnected( GlgObject node );
void AddObjectCB( GlgObject object, void *data, GlgLong is_node );
void SelectObjectCB( GlgObject object, void *data, GlgLong is_node );
void CutObjectCB( GlgObject object, void *data, GlgLong is_node );
void PasteObjectCB( GlgObject object, void *data, GlgLong is_node );
void UpdateProcessDiagram( GlgAnyType data, GlgLong *timer_ptr );
double GetTagValue( char *tag_name, GlgObject data_object );
GlgIHToken ButtonToToken( char *button_name );
void error( char *string, GlgBoolean quit );
void UninstallPassTroughIH( GlgCallEvent call_event );
void DeselectButton( char * button_name );
void AddDialog( GlgObject drawing, char * dialog_name, char * title,
                GlgLong x_offset, GlgLong y_offset );
void ConfirmIH( GlgIH ih, GlgCallEvent call_event );
void RestoreToggleStateWhenDisabled( GlgIHToken token );
void GetDataSourceIH( GlgIH ih, GlgCallEvent call_event );
GlgBoolean IsChildOf( GlgObject grand, GlgObject object );
